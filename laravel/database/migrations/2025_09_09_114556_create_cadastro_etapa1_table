<?php
# classe de criaçao das entidades do bancos de dados - tabela Novidade
# usa o firework/biblioteca migrate
 
# para enviar a tabela para o banco executamos os comandos do migration
# php artisan migrate - sobre as alteraçoes e tabelas novas
# php artisan migrate:fresh - apaga os dados das tabelas e cria as novas
# php artisan migrate:refresh - apaga os dados e as tabelas e as recria
# php artisan migrate:rollback --steps=2 - retorna a versao anterior do banco
 
#importaçao  das classes do migrate
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
 
return new class extends Migration
{
    /**
     * Run the migrations.
     * cria a tabela banco de dados
     *
     * $sql_cria_tabela = "CREATE TABLE IF NOT EXISTS estetica_t99.news (
     * id_news INT(255) NOT NULL DEFAULT AUTO_INCREMENT PRIMARY KEY,
     * email VARCHAR(254) NOT NULL UNIQUE,
     * validado INT(1) NOT NULL DEFAULT 0,
     * opt_out ENUM('sim','nao') NOT NULL DEFAULT 'sim',
     *  )
     *
     */
    public function up(): void
    {
 
        Schema::create('verificacoesIdentidade', function (Blueprint $table) {
            $table->id('id_verificacao');
 
            // Uploads de arquivos (salvamos apenas o caminho do arquivo)
            $table->string('foto_perfil')->nullable();
            $table->string('foto_frente')->nullable();
            $table->string('foto_verso')->nullable();
            $table->string('selfie')->nullable();
            $table->string('ficha_criminal')->nullable();
 
            // Documentos e identificações
            $table->string('cpf', 14)->unique();
            $table->string('rg', 20)->nullable();
            $table->string('cnh', 20)->nullable();
 
            // Autorizações (checkbox → boolean)
            $table->boolean('consentimento_criminal')->default(false);
            $table->boolean('consentimento_antecedentes')->default(false);
            $table->boolean('consentimento_transito')->default(false);
 
            // Dados complementares
            $table->enum('genero', [
                'Mulher (Trans ou Cis)',
                'Homem (Trans ou Cis)',
                'Gênero Não-Binário',
                'Outros'
            ])->nullable();
 
            $table->enum('estado_civil', [
                'Solteira',
                'Casada',
                'Divorciada',
                'Viúva',
                'Outro'
            ])->nullable();
 
            $table->timestamps();
        });
 
       
    }
 
    /**
     * Reverse the migrations.
     *
     */
    public function down(): void
    {
        Schema::dropIfExists('verificacoesIdentidade');
    }
};