<?php
# classe de criaçao das entidades do bancos de dados - tabela Novidade
# usa o firework/biblioteca migrate
 
# para enviar a tabela para o banco executamos os comandos do migration
# php artisan migrate - sobre as alteraçoes e tabelas novas
# php artisan migrate:fresh - apaga os dados das tabelas e cria as novas
# php artisan migrate:refresh - apaga os dados e as tabelas e as recria
# php artisan migrate:rollback --steps=2 - retorna a versao anterior do banco
 
#importaçao  das classes do migrate
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
 
return new class extends Migration
{
    /**
     * Run the migrations.
     * cria a tabela banco de dados
     *
     * $sql_cria_tabela = "CREATE TABLE IF NOT EXISTS estetica_t99.news (
     * id_news INT(255) NOT NULL DEFAULT AUTO_INCREMENT PRIMARY KEY,
     * email VARCHAR(254) NOT NULL UNIQUE,
     * validado INT(1) NOT NULL DEFAULT 0,
     * opt_out ENUM('sim','nao') NOT NULL DEFAULT 'sim',
     *  )
     *
     */
    public function up(): void
    {
 
        Schema::create('preferenciasBancarias', function (Blueprint $table) {
            $table->id('id_preferencia');
 
            // Área de atuação
            $table->enum('area_atuacao', [
                'Beleza', 'Limpeza', 'Transporte', 'Pets', 'Outros'
            ]);
 
            // Informações do serviço
            $table->text('descricao'); // descrição do serviço
            $table->text('historico_conducao')->nullable(); // histórico opcional
            $table->string('formacao', 150)->nullable(); // cursos/formações
            $table->text('disponibilidade'); // horários disponíveis
            $table->text('tipos_servico'); // serviços aceitos
 
            // Localização e contato
            $table->string('endereco', 255);
            $table->string('whatsapp', 20)->nullable();
 
            // Dados bancários
            $table->string('banco', 100);
            $table->string('agencia', 20);
            $table->string('conta', 30);
            $table->enum('tipo_conta', ['Corrente', 'Poupança', 'Salário']);
            $table->string('pix', 100)->nullable();
 
            // Consentimentos
            $table->boolean('politica_privacidade')->default(false);
            $table->boolean('lgpd')->default(false);
 
            $table->timestamps();
        });
 
       
    }
 
    /**
     * Reverse the migrations.
     *
     */
    public function down(): void
    {
        Schema::dropIfExists('preferenciasBancarias');
    }
};